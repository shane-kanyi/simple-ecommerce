name: CI/CD for E-commerce App

on:
  push:
    branches: [ "main" ]

jobs:
  test-build-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies and Test
      working-directory: ./app
      run: |
        npm install
        npm test

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/simple-ecommerce:latest

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/simple-ecommerce:latest'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  deploy:
    needs: test-build-scan
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Add the host key to known_hosts to avoid interactive prompt
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simple-ecommerce:latest
          docker stop ecomm-app || true
          docker rm ecomm-app || true
          docker run -d --name ecomm-app -p 3000:3000 --restart always \
          ${{ secrets.DOCKERHUB_USERNAME }}/simple-ecommerce:latest